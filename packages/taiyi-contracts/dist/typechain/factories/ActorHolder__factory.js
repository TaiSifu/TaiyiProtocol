"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorHolder__factory = void 0;
const ethers_1 = require("ethers");
class ActorHolder__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_actors, _actor, overrides) {
        return super.deploy(_actors, _actor, overrides || {});
    }
    getDeployTransaction(_actors, _actor, overrides) {
        return super.getDeployTransaction(_actors, _actor, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ActorHolder__factory = ActorHolder__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IActors",
                name: "_actors",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_actor",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "actors",
        outputs: [
            {
                internalType: "contract IActors",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "onERC721Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516103f73803806103f783398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b610356806100a16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a714610051578063150b7a02146100795780633ccfd60b146100b1578063cc7f0c24146100bb575b600080fd5b61006461005f3660046102e1565b6100e6565b60405190151581526020015b60405180910390f35b610098610087366004610242565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610070565b6100b961011d565b005b6000546100ce906001600160a01b031681565b6040516001600160a01b039091168152602001610070565b60006001600160e01b03198216630a85bd0160e11b148061011757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001546040516331a9108f60e11b8152600481019190915233916001600160a01b031690636352211e9060240160206040518083038186803b15801561016557600080fd5b505afa158015610179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019d919061021e565b6001600160a01b0316146101ef5760405162461bcd60e51b81526020600482015260156024820152742cb7ba9030b932903737ba103a34329037bbb732b960591b604482015260640160405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561021b573d6000803e3d6000fd5b50565b60006020828403121561023057600080fd5b815161023b8161030b565b9392505050565b60008060008060006080868803121561025a57600080fd5b85356102658161030b565b945060208601356102758161030b565b935060408601359250606086013567ffffffffffffffff8082111561029957600080fd5b818801915088601f8301126102ad57600080fd5b8135818111156102bc57600080fd5b8960208285010111156102ce57600080fd5b9699959850939650602001949392505050565b6000602082840312156102f357600080fd5b81356001600160e01b03198116811461023b57600080fd5b6001600160a01b038116811461021b57600080fdfea26469706673582212207af05d08d5c87b985caa99036a9d6aa69edc15d918908112f0a0209260d994aa64736f6c63430008060033";
