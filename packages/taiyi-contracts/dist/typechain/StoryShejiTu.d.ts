/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface StoryShejiTuInterface extends ethers.utils.Interface {
  functions: {
    "activeTrigger(uint256,uint256,uint256[],string[])": FunctionFragment;
    "actors()": FunctionFragment;
    "addAgeEvent(uint256,uint256,uint256)": FunctionFragment;
    "attributes()": FunctionFragment;
    "bornActor(uint256)": FunctionFragment;
    "changeAttributeModule(address,address)": FunctionFragment;
    "description()": FunctionFragment;
    "eventIDs(uint256,uint256)": FunctionFragment;
    "eventProbs(uint256,uint256)": FunctionFragment;
    "events()": FunctionFragment;
    "getAgeEventIds(uint256)": FunctionFragment;
    "getAgeEventProbs(uint256)": FunctionFragment;
    "grow(uint256)": FunctionFragment;
    "initOperator(uint256)": FunctionFragment;
    "initialize(string,string,uint256,address,address,address,address,address,address,address,address)": FunctionFragment;
    "locations()": FunctionFragment;
    "moduleID()": FunctionFragment;
    "name()": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "operator()": FunctionFragment;
    "owner()": FunctionFragment;
    "random()": FunctionFragment;
    "registerAttributeModule(address)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setAgeEventProb(uint256,uint256,uint256)": FunctionFragment;
    "setStartZone(uint256)": FunctionFragment;
    "startZone()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "talents()": FunctionFragment;
    "tokenJSON(uint256)": FunctionFragment;
    "tokenSVG(uint256,uint256,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "trigrams()": FunctionFragment;
    "zones()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "activeTrigger",
    values: [BigNumberish, BigNumberish, BigNumberish[], string[]]
  ): string;
  encodeFunctionData(functionFragment: "actors", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addAgeEvent",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "attributes",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "bornActor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAttributeModule",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "description",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "eventIDs",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "eventProbs",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "events", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getAgeEventIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAgeEventProbs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "grow", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "initOperator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      string,
      BigNumberish,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ]
  ): string;
  encodeFunctionData(functionFragment: "locations", values?: undefined): string;
  encodeFunctionData(functionFragment: "moduleID", values?: undefined): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "operator", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "random", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "registerAttributeModule",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAgeEventProb",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setStartZone",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "startZone", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "talents", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenJSON",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenSVG",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "trigrams", values?: undefined): string;
  encodeFunctionData(functionFragment: "zones", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "activeTrigger",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "actors", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addAgeEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "attributes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "bornActor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeAttributeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "description",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "eventIDs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "eventProbs", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "events", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAgeEventIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAgeEventProbs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "locations", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "moduleID", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "operator", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "random", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "registerAttributeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAgeEventProb",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStartZone",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "startZone", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "talents", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenJSON", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenSVG", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "trigrams", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "zones", data: BytesLike): Result;

  events: {
    "ActiveEvent(uint256,uint256,uint256)": EventFragment;
    "AgeEvent(uint256,uint256,uint256)": EventFragment;
    "BranchEvent(uint256,uint256,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ActiveEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AgeEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BranchEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class StoryShejiTu extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: StoryShejiTuInterface;

  functions: {
    activeTrigger(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "activeTrigger(uint256,uint256,uint256[],string[])"(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    actors(overrides?: CallOverrides): Promise<[string]>;

    "actors()"(overrides?: CallOverrides): Promise<[string]>;

    addAgeEvent(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addAgeEvent(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    attributes(overrides?: CallOverrides): Promise<[string]>;

    "attributes()"(overrides?: CallOverrides): Promise<[string]>;

    bornActor(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "bornActor(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeAttributeModule(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "changeAttributeModule(address,address)"(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    description(overrides?: CallOverrides): Promise<[string]>;

    "description()"(overrides?: CallOverrides): Promise<[string]>;

    eventIDs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "eventIDs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    eventProbs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "eventProbs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    events(overrides?: CallOverrides): Promise<[string]>;

    "events()"(overrides?: CallOverrides): Promise<[string]>;

    getAgeEventIds(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getAgeEventIds(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getAgeEventProbs(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getAgeEventProbs(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    grow(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "grow(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initialize(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initialize(string,string,uint256,address,address,address,address,address,address,address,address)"(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    locations(overrides?: CallOverrides): Promise<[string]>;

    "locations()"(overrides?: CallOverrides): Promise<[string]>;

    moduleID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "moduleID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    "name()"(overrides?: CallOverrides): Promise<[string]>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    operator(overrides?: CallOverrides): Promise<[BigNumber]>;

    "operator()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    random(overrides?: CallOverrides): Promise<[string]>;

    "random()"(overrides?: CallOverrides): Promise<[string]>;

    registerAttributeModule(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "registerAttributeModule(address)"(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAgeEventProb(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setAgeEventProb(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setStartZone(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setStartZone(uint256)"(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    startZone(overrides?: CallOverrides): Promise<[BigNumber]>;

    "startZone()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    talents(overrides?: CallOverrides): Promise<[string]>;

    "talents()"(overrides?: CallOverrides): Promise<[string]>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    trigrams(overrides?: CallOverrides): Promise<[string]>;

    "trigrams()"(overrides?: CallOverrides): Promise<[string]>;

    zones(overrides?: CallOverrides): Promise<[string]>;

    "zones()"(overrides?: CallOverrides): Promise<[string]>;
  };

  activeTrigger(
    _eventId: BigNumberish,
    _actor: BigNumberish,
    _uintParams: BigNumberish[],
    _stringParams: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "activeTrigger(uint256,uint256,uint256[],string[])"(
    _eventId: BigNumberish,
    _actor: BigNumberish,
    _uintParams: BigNumberish[],
    _stringParams: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  actors(overrides?: CallOverrides): Promise<string>;

  "actors()"(overrides?: CallOverrides): Promise<string>;

  addAgeEvent(
    _age: BigNumberish,
    _eventId: BigNumberish,
    _eventProb: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addAgeEvent(uint256,uint256,uint256)"(
    _age: BigNumberish,
    _eventId: BigNumberish,
    _eventProb: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  attributes(overrides?: CallOverrides): Promise<string>;

  "attributes()"(overrides?: CallOverrides): Promise<string>;

  bornActor(
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "bornActor(uint256)"(
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeAttributeModule(
    _oldAddress: string,
    _newAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "changeAttributeModule(address,address)"(
    _oldAddress: string,
    _newAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  description(overrides?: CallOverrides): Promise<string>;

  "description()"(overrides?: CallOverrides): Promise<string>;

  eventIDs(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "eventIDs(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  eventProbs(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "eventProbs(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  events(overrides?: CallOverrides): Promise<string>;

  "events()"(overrides?: CallOverrides): Promise<string>;

  getAgeEventIds(
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getAgeEventIds(uint256)"(
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getAgeEventProbs(
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getAgeEventProbs(uint256)"(
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  grow(
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "grow(uint256)"(
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initOperator(
    _operator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initOperator(uint256)"(
    _operator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initialize(
    _name: string,
    _desc: string,
    _moduleID: BigNumberish,
    _actors: string,
    _locations: string,
    _zones: string,
    _attributes: string,
    _evts: string,
    _talents: string,
    _trigrams: string,
    _random: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initialize(string,string,uint256,address,address,address,address,address,address,address,address)"(
    _name: string,
    _desc: string,
    _moduleID: BigNumberish,
    _actors: string,
    _locations: string,
    _zones: string,
    _attributes: string,
    _evts: string,
    _talents: string,
    _trigrams: string,
    _random: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  locations(overrides?: CallOverrides): Promise<string>;

  "locations()"(overrides?: CallOverrides): Promise<string>;

  moduleID(overrides?: CallOverrides): Promise<BigNumber>;

  "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  operator(overrides?: CallOverrides): Promise<BigNumber>;

  "operator()"(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  random(overrides?: CallOverrides): Promise<string>;

  "random()"(overrides?: CallOverrides): Promise<string>;

  registerAttributeModule(
    _attributeModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "registerAttributeModule(address)"(
    _attributeModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAgeEventProb(
    _age: BigNumberish,
    _eventId: BigNumberish,
    _eventProb: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setAgeEventProb(uint256,uint256,uint256)"(
    _age: BigNumberish,
    _eventId: BigNumberish,
    _eventProb: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setStartZone(
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setStartZone(uint256)"(
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  startZone(overrides?: CallOverrides): Promise<BigNumber>;

  "startZone()"(overrides?: CallOverrides): Promise<BigNumber>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  talents(overrides?: CallOverrides): Promise<string>;

  "talents()"(overrides?: CallOverrides): Promise<string>;

  tokenJSON(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenJSON(uint256)"(
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokenSVG(
    _actor: BigNumberish,
    _startY: BigNumberish,
    _lineHeight: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

  "tokenSVG(uint256,uint256,uint256)"(
    _actor: BigNumberish,
    _startY: BigNumberish,
    _lineHeight: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  trigrams(overrides?: CallOverrides): Promise<string>;

  "trigrams()"(overrides?: CallOverrides): Promise<string>;

  zones(overrides?: CallOverrides): Promise<string>;

  "zones()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    activeTrigger(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "activeTrigger(uint256,uint256,uint256[],string[])"(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    actors(overrides?: CallOverrides): Promise<string>;

    "actors()"(overrides?: CallOverrides): Promise<string>;

    addAgeEvent(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addAgeEvent(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    attributes(overrides?: CallOverrides): Promise<string>;

    "attributes()"(overrides?: CallOverrides): Promise<string>;

    bornActor(_actor: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "bornActor(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeAttributeModule(
      _oldAddress: string,
      _newAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeAttributeModule(address,address)"(
      _oldAddress: string,
      _newAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    description(overrides?: CallOverrides): Promise<string>;

    "description()"(overrides?: CallOverrides): Promise<string>;

    eventIDs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventIDs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventProbs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventProbs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    events(overrides?: CallOverrides): Promise<string>;

    "events()"(overrides?: CallOverrides): Promise<string>;

    getAgeEventIds(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getAgeEventIds(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getAgeEventProbs(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getAgeEventProbs(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    grow(_actor: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "grow(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initOperator(
      _operator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(string,string,uint256,address,address,address,address,address,address,address,address)"(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: CallOverrides
    ): Promise<void>;

    locations(overrides?: CallOverrides): Promise<string>;

    "locations()"(overrides?: CallOverrides): Promise<string>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    operator(overrides?: CallOverrides): Promise<BigNumber>;

    "operator()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    random(overrides?: CallOverrides): Promise<string>;

    "random()"(overrides?: CallOverrides): Promise<string>;

    registerAttributeModule(
      _attributeModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "registerAttributeModule(address)"(
      _attributeModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setAgeEventProb(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAgeEventProb(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setStartZone(
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setStartZone(uint256)"(
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    startZone(overrides?: CallOverrides): Promise<BigNumber>;

    "startZone()"(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    talents(overrides?: CallOverrides): Promise<string>;

    "talents()"(overrides?: CallOverrides): Promise<string>;

    tokenJSON(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    trigrams(overrides?: CallOverrides): Promise<string>;

    "trigrams()"(overrides?: CallOverrides): Promise<string>;

    zones(overrides?: CallOverrides): Promise<string>;

    "zones()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    ActiveEvent(
      actor: BigNumberish | null,
      age: BigNumberish | null,
      eventId: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber, BigNumber],
      { actor: BigNumber; age: BigNumber; eventId: BigNumber }
    >;

    AgeEvent(
      actor: BigNumberish | null,
      age: BigNumberish | null,
      eventId: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber, BigNumber],
      { actor: BigNumber; age: BigNumber; eventId: BigNumber }
    >;

    BranchEvent(
      actor: BigNumberish | null,
      age: BigNumberish | null,
      eventId: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber, BigNumber],
      { actor: BigNumber; age: BigNumber; eventId: BigNumber }
    >;

    Initialized(version: null): TypedEventFilter<[number], { version: number }>;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    activeTrigger(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "activeTrigger(uint256,uint256,uint256[],string[])"(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    actors(overrides?: CallOverrides): Promise<BigNumber>;

    "actors()"(overrides?: CallOverrides): Promise<BigNumber>;

    addAgeEvent(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addAgeEvent(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    attributes(overrides?: CallOverrides): Promise<BigNumber>;

    "attributes()"(overrides?: CallOverrides): Promise<BigNumber>;

    bornActor(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "bornActor(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeAttributeModule(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "changeAttributeModule(address,address)"(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    description(overrides?: CallOverrides): Promise<BigNumber>;

    "description()"(overrides?: CallOverrides): Promise<BigNumber>;

    eventIDs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventIDs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventProbs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventProbs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    events(overrides?: CallOverrides): Promise<BigNumber>;

    "events()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAgeEventIds(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAgeEventIds(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAgeEventProbs(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAgeEventProbs(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grow(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "grow(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initialize(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initialize(string,string,uint256,address,address,address,address,address,address,address,address)"(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    locations(overrides?: CallOverrides): Promise<BigNumber>;

    "locations()"(overrides?: CallOverrides): Promise<BigNumber>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    operator(overrides?: CallOverrides): Promise<BigNumber>;

    "operator()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    random(overrides?: CallOverrides): Promise<BigNumber>;

    "random()"(overrides?: CallOverrides): Promise<BigNumber>;

    registerAttributeModule(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "registerAttributeModule(address)"(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAgeEventProb(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setAgeEventProb(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setStartZone(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setStartZone(uint256)"(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    startZone(overrides?: CallOverrides): Promise<BigNumber>;

    "startZone()"(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    talents(overrides?: CallOverrides): Promise<BigNumber>;

    "talents()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    trigrams(overrides?: CallOverrides): Promise<BigNumber>;

    "trigrams()"(overrides?: CallOverrides): Promise<BigNumber>;

    zones(overrides?: CallOverrides): Promise<BigNumber>;

    "zones()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    activeTrigger(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "activeTrigger(uint256,uint256,uint256[],string[])"(
      _eventId: BigNumberish,
      _actor: BigNumberish,
      _uintParams: BigNumberish[],
      _stringParams: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    actors(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "actors()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addAgeEvent(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addAgeEvent(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    attributes(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "attributes()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bornActor(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "bornActor(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeAttributeModule(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "changeAttributeModule(address,address)"(
      _oldAddress: string,
      _newAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    description(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "description()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    eventIDs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "eventIDs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    eventProbs(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "eventProbs(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    events(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "events()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAgeEventIds(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAgeEventIds(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAgeEventProbs(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAgeEventProbs(uint256)"(
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grow(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "grow(uint256)"(
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initialize(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initialize(string,string,uint256,address,address,address,address,address,address,address,address)"(
      _name: string,
      _desc: string,
      _moduleID: BigNumberish,
      _actors: string,
      _locations: string,
      _zones: string,
      _attributes: string,
      _evts: string,
      _talents: string,
      _trigrams: string,
      _random: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    locations(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "locations()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    moduleID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "moduleID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    operator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "operator()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    random(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "random()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registerAttributeModule(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "registerAttributeModule(address)"(
      _attributeModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAgeEventProb(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setAgeEventProb(uint256,uint256,uint256)"(
      _age: BigNumberish,
      _eventId: BigNumberish,
      _eventProb: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setStartZone(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setStartZone(uint256)"(
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    startZone(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "startZone()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    talents(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "talents()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    trigrams(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "trigrams()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    zones(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "zones()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
