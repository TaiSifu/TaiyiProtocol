/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface WorldEventsInterface extends ethers.utils.Interface {
  functions: {
    "ONE_AGE_VSECOND()": FunctionFragment;
    "actorBirthday(uint256)": FunctionFragment;
    "actorBorn(uint256)": FunctionFragment;
    "actorEvent(uint256,uint256)": FunctionFragment;
    "actorEventCount(uint256,uint256)": FunctionFragment;
    "addActorEvent(uint256,uint256,uint256,uint256)": FunctionFragment;
    "ages(uint256)": FunctionFragment;
    "bornActor(uint256,uint256)": FunctionFragment;
    "bornTimeStamps(uint256)": FunctionFragment;
    "canOccurred(uint256,uint256,uint256)": FunctionFragment;
    "changeAge(uint256,uint256,uint256)": FunctionFragment;
    "checkBranch(uint256,uint256,uint256)": FunctionFragment;
    "eventAttributeModifiers(uint256,uint256)": FunctionFragment;
    "eventInfo(uint256,uint256)": FunctionFragment;
    "eventProcessors(uint256)": FunctionFragment;
    "expectedAge(uint256)": FunctionFragment;
    "grow(uint256,uint256)": FunctionFragment;
    "moduleID()": FunctionFragment;
    "setEventProcessor(uint256,address)": FunctionFragment;
    "tokenJSON(uint256)": FunctionFragment;
    "tokenSVG(uint256,uint256,uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "tokenURIByAge(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ONE_AGE_VSECOND",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "actorBirthday",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "actorBorn",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "actorEvent",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "actorEventCount",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addActorEvent",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "ages", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "bornActor",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bornTimeStamps",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "canOccurred",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeAge",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkBranch",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "eventAttributeModifiers",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "eventInfo",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "eventProcessors",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "expectedAge",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "grow",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "moduleID", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setEventProcessor",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenJSON",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenSVG",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURIByAge",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "ONE_AGE_VSECOND",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "actorBirthday",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "actorBorn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "actorEvent", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "actorEventCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addActorEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ages", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "bornActor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "bornTimeStamps",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canOccurred",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "changeAge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checkBranch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eventAttributeModifiers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "eventInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "eventProcessors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "expectedAge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "moduleID", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setEventProcessor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenJSON", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenSVG", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenURIByAge",
    data: BytesLike
  ): Result;

  events: {
    "Born(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Born"): EventFragment;
}

export class WorldEvents extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: WorldEventsInterface;

  functions: {
    ONE_AGE_VSECOND(overrides?: CallOverrides): Promise<[BigNumber]>;

    "ONE_AGE_VSECOND()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    actorBirthday(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "actorBirthday(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    actorBorn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "actorBorn(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    actorEvent(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "actorEvent(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    actorEventCount(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "actorEventCount(uint256,uint256)"(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    addActorEvent(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addActorEvent(uint256,uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ages(arg0: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber]>;

    "ages(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    bornActor(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "bornActor(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bornTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "bornTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    canOccurred(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canOccurred(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    changeAge(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "changeAge(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    checkBranch(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "checkBranch(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    eventAttributeModifiers(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "eventAttributeModifiers(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    eventInfo(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "eventInfo(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    eventProcessors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "eventProcessors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    expectedAge(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "expectedAge(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    grow(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "grow(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moduleID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "moduleID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    setEventProcessor(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setEventProcessor(uint256,address)"(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    tokenURI(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenURI(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    tokenURIByAge(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tokenURIByAge(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  ONE_AGE_VSECOND(overrides?: CallOverrides): Promise<BigNumber>;

  "ONE_AGE_VSECOND()"(overrides?: CallOverrides): Promise<BigNumber>;

  actorBirthday(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "actorBirthday(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  actorBorn(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "actorBorn(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  actorEvent(
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "actorEvent(uint256,uint256)"(
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  actorEventCount(
    _actor: BigNumberish,
    _eventId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "actorEventCount(uint256,uint256)"(
    _actor: BigNumberish,
    _eventId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  addActorEvent(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _age: BigNumberish,
    _eventId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addActorEvent(uint256,uint256,uint256,uint256)"(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _age: BigNumberish,
    _eventId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ages(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "ages(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  bornActor(
    _operator: BigNumberish,
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "bornActor(uint256,uint256)"(
    _operator: BigNumberish,
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bornTimeStamps(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "bornTimeStamps(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  canOccurred(
    _actor: BigNumberish,
    _id: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canOccurred(uint256,uint256,uint256)"(
    _actor: BigNumberish,
    _id: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  changeAge(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "changeAge(uint256,uint256,uint256)"(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  checkBranch(
    _actor: BigNumberish,
    _id: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "checkBranch(uint256,uint256,uint256)"(
    _actor: BigNumberish,
    _id: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  eventAttributeModifiers(
    _id: BigNumberish,
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "eventAttributeModifiers(uint256,uint256)"(
    _id: BigNumberish,
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  eventInfo(
    _id: BigNumberish,
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "eventInfo(uint256,uint256)"(
    _id: BigNumberish,
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  eventProcessors(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "eventProcessors(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  expectedAge(
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "expectedAge(uint256)"(
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  grow(
    _operator: BigNumberish,
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "grow(uint256,uint256)"(
    _operator: BigNumberish,
    _actor: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moduleID(overrides?: CallOverrides): Promise<BigNumber>;

  "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

  setEventProcessor(
    _id: BigNumberish,
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setEventProcessor(uint256,address)"(
    _id: BigNumberish,
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tokenJSON(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenJSON(uint256)"(
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokenSVG(
    _actor: BigNumberish,
    _startY: BigNumberish,
    _lineHeight: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

  "tokenSVG(uint256,uint256,uint256)"(
    _actor: BigNumberish,
    _startY: BigNumberish,
    _lineHeight: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

  tokenURI(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenURI(uint256)"(
    _actor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokenURIByAge(
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "tokenURIByAge(uint256,uint256)"(
    _actor: BigNumberish,
    _age: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    ONE_AGE_VSECOND(overrides?: CallOverrides): Promise<BigNumber>;

    "ONE_AGE_VSECOND()"(overrides?: CallOverrides): Promise<BigNumber>;

    actorBirthday(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "actorBirthday(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    actorBorn(arg0: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "actorBorn(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    actorEvent(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "actorEvent(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    actorEventCount(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actorEventCount(uint256,uint256)"(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addActorEvent(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addActorEvent(uint256,uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    ages(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "ages(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bornActor(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "bornActor(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    bornTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bornTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canOccurred(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canOccurred(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    changeAge(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeAge(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    checkBranch(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkBranch(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventAttributeModifiers(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "eventAttributeModifiers(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    eventInfo(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "eventInfo(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    eventProcessors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "eventProcessors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    expectedAge(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "expectedAge(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grow(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "grow(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    setEventProcessor(
      _id: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setEventProcessor(uint256,address)"(
      _id: BigNumberish,
      _address: string,
      overrides?: CallOverrides
    ): Promise<void>;

    tokenJSON(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { _endY: BigNumber }>;

    tokenURI(_actor: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenURI(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokenURIByAge(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "tokenURIByAge(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    Born(
      actor: BigNumberish | null
    ): TypedEventFilter<[BigNumber], { actor: BigNumber }>;
  };

  estimateGas: {
    ONE_AGE_VSECOND(overrides?: CallOverrides): Promise<BigNumber>;

    "ONE_AGE_VSECOND()"(overrides?: CallOverrides): Promise<BigNumber>;

    actorBirthday(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actorBirthday(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    actorBorn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actorBorn(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    actorEvent(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actorEvent(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    actorEventCount(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actorEventCount(uint256,uint256)"(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addActorEvent(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addActorEvent(uint256,uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ages(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "ages(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bornActor(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "bornActor(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bornTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bornTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canOccurred(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canOccurred(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    changeAge(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "changeAge(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    checkBranch(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkBranch(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventAttributeModifiers(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventAttributeModifiers(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventInfo(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventInfo(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    eventProcessors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "eventProcessors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    expectedAge(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "expectedAge(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grow(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "grow(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    setEventProcessor(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setEventProcessor(uint256,address)"(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURIByAge(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURIByAge(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ONE_AGE_VSECOND(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ONE_AGE_VSECOND()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    actorBirthday(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "actorBirthday(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    actorBorn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "actorBorn(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    actorEvent(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "actorEvent(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    actorEventCount(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "actorEventCount(uint256,uint256)"(
      _actor: BigNumberish,
      _eventId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addActorEvent(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addActorEvent(uint256,uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      _eventId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ages(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ages(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bornActor(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "bornActor(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bornTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "bornTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canOccurred(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canOccurred(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    changeAge(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "changeAge(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    checkBranch(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkBranch(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _id: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    eventAttributeModifiers(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "eventAttributeModifiers(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    eventInfo(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "eventInfo(uint256,uint256)"(
      _id: BigNumberish,
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    eventProcessors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "eventProcessors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    expectedAge(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "expectedAge(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grow(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "grow(uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moduleID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "moduleID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setEventProcessor(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setEventProcessor(uint256,address)"(
      _id: BigNumberish,
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tokenJSON(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenJSON(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenSVG(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenSVG(uint256,uint256,uint256)"(
      _actor: BigNumberish,
      _startY: BigNumberish,
      _lineHeight: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(uint256)"(
      _actor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURIByAge(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURIByAge(uint256,uint256)"(
      _actor: BigNumberish,
      _age: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
