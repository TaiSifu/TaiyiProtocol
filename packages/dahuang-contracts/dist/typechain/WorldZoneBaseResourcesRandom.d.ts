/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface WorldZoneBaseResourcesRandomInterface extends ethers.utils.Interface {
  functions: {
    "ACTOR_GUANGONG()": FunctionFragment;
    "FABRIC_GROW_QUANTITY()": FunctionFragment;
    "FOOD_GROW_QUANTITY()": FunctionFragment;
    "GOLD_GROW_QUANTITY()": FunctionFragment;
    "GROW_QUANTITY_SCALE()": FunctionFragment;
    "GROW_TIME_DAY()": FunctionFragment;
    "HERB_GROW_QUANTITY()": FunctionFragment;
    "WOOD_GROW_QUANTITY()": FunctionFragment;
    "collectAssets(uint256,uint256,uint256)": FunctionFragment;
    "growAssets(uint256,uint256)": FunctionFragment;
    "initOperator(uint256)": FunctionFragment;
    "lastGrowTimeStamps(uint256)": FunctionFragment;
    "moduleID()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "tokenJSON(uint256)": FunctionFragment;
    "tokenSVG(uint256,uint256,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "zoneAssets(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ACTOR_GUANGONG",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FABRIC_GROW_QUANTITY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FOOD_GROW_QUANTITY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GOLD_GROW_QUANTITY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GROW_QUANTITY_SCALE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GROW_TIME_DAY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "HERB_GROW_QUANTITY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WOOD_GROW_QUANTITY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "collectAssets",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "growAssets",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initOperator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "lastGrowTimeStamps",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "moduleID", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenJSON",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenSVG",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "zoneAssets",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "ACTOR_GUANGONG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FABRIC_GROW_QUANTITY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FOOD_GROW_QUANTITY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GOLD_GROW_QUANTITY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GROW_QUANTITY_SCALE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GROW_TIME_DAY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "HERB_GROW_QUANTITY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WOOD_GROW_QUANTITY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "growAssets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lastGrowTimeStamps",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "moduleID", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenJSON", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenSVG", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "zoneAssets", data: BytesLike): Result;

  events: {
    "ActorAssetCollected(uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "ZoneAssetGrown(uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ActorAssetCollected"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ZoneAssetGrown"): EventFragment;
}

export class WorldZoneBaseResourcesRandom extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: WorldZoneBaseResourcesRandomInterface;

  functions: {
    ACTOR_GUANGONG(overrides?: CallOverrides): Promise<[BigNumber]>;

    "ACTOR_GUANGONG()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    FABRIC_GROW_QUANTITY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "FABRIC_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    FOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "FOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    GOLD_GROW_QUANTITY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "GOLD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    GROW_QUANTITY_SCALE(overrides?: CallOverrides): Promise<[BigNumber]>;

    "GROW_QUANTITY_SCALE()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    GROW_TIME_DAY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "GROW_TIME_DAY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    HERB_GROW_QUANTITY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "HERB_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    WOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<[BigNumber]>;

    "WOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    collectAssets(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "collectAssets(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    growAssets(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "growAssets(uint256,uint256)"(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    lastGrowTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "lastGrowTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    moduleID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "moduleID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tokenJSON(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "tokenJSON(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    tokenSVG(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "tokenSVG(uint256,uint256,uint256)"(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    zoneAssets(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "zoneAssets(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  ACTOR_GUANGONG(overrides?: CallOverrides): Promise<BigNumber>;

  "ACTOR_GUANGONG()"(overrides?: CallOverrides): Promise<BigNumber>;

  FABRIC_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

  "FABRIC_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

  FOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

  "FOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

  GOLD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

  "GOLD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

  GROW_QUANTITY_SCALE(overrides?: CallOverrides): Promise<BigNumber>;

  "GROW_QUANTITY_SCALE()"(overrides?: CallOverrides): Promise<BigNumber>;

  GROW_TIME_DAY(overrides?: CallOverrides): Promise<BigNumber>;

  "GROW_TIME_DAY()"(overrides?: CallOverrides): Promise<BigNumber>;

  HERB_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

  "HERB_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

  WOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

  "WOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

  collectAssets(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "collectAssets(uint256,uint256,uint256)"(
    _operator: BigNumberish,
    _actor: BigNumberish,
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  growAssets(
    _operator: BigNumberish,
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "growAssets(uint256,uint256)"(
    _operator: BigNumberish,
    _zoneId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initOperator(
    _operator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "initOperator(uint256)"(
    _operator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  lastGrowTimeStamps(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "lastGrowTimeStamps(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  moduleID(overrides?: CallOverrides): Promise<BigNumber>;

  "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tokenJSON(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenJSON(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  tokenSVG(
    arg0: BigNumberish,
    _startY: BigNumberish,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber]>;

  "tokenSVG(uint256,uint256,uint256)"(
    arg0: BigNumberish,
    _startY: BigNumberish,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber]>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  zoneAssets(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "zoneAssets(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    ACTOR_GUANGONG(overrides?: CallOverrides): Promise<BigNumber>;

    "ACTOR_GUANGONG()"(overrides?: CallOverrides): Promise<BigNumber>;

    FABRIC_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "FABRIC_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    FOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "FOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    GOLD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "GOLD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    GROW_QUANTITY_SCALE(overrides?: CallOverrides): Promise<BigNumber>;

    "GROW_QUANTITY_SCALE()"(overrides?: CallOverrides): Promise<BigNumber>;

    GROW_TIME_DAY(overrides?: CallOverrides): Promise<BigNumber>;

    "GROW_TIME_DAY()"(overrides?: CallOverrides): Promise<BigNumber>;

    HERB_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "HERB_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    WOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "WOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    collectAssets(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "collectAssets(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    growAssets(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "growAssets(uint256,uint256)"(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initOperator(
      _operator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    lastGrowTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lastGrowTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    tokenJSON(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenJSON(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    tokenSVG(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "tokenSVG(uint256,uint256,uint256)"(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    zoneAssets(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "zoneAssets(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    ActorAssetCollected(
      actor: BigNumberish | null,
      gold: null,
      food: null,
      herb: null,
      fabric: null,
      wood: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        actor: BigNumber;
        gold: BigNumber;
        food: BigNumber;
        herb: BigNumber;
        fabric: BigNumber;
        wood: BigNumber;
      }
    >;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    ZoneAssetGrown(
      zone: BigNumberish | null,
      gold: null,
      food: null,
      herb: null,
      fabric: null,
      wood: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        zone: BigNumber;
        gold: BigNumber;
        food: BigNumber;
        herb: BigNumber;
        fabric: BigNumber;
        wood: BigNumber;
      }
    >;
  };

  estimateGas: {
    ACTOR_GUANGONG(overrides?: CallOverrides): Promise<BigNumber>;

    "ACTOR_GUANGONG()"(overrides?: CallOverrides): Promise<BigNumber>;

    FABRIC_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "FABRIC_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    FOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "FOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    GOLD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "GOLD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    GROW_QUANTITY_SCALE(overrides?: CallOverrides): Promise<BigNumber>;

    "GROW_QUANTITY_SCALE()"(overrides?: CallOverrides): Promise<BigNumber>;

    GROW_TIME_DAY(overrides?: CallOverrides): Promise<BigNumber>;

    "GROW_TIME_DAY()"(overrides?: CallOverrides): Promise<BigNumber>;

    HERB_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "HERB_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    WOOD_GROW_QUANTITY(overrides?: CallOverrides): Promise<BigNumber>;

    "WOOD_GROW_QUANTITY()"(overrides?: CallOverrides): Promise<BigNumber>;

    collectAssets(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "collectAssets(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    growAssets(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "growAssets(uint256,uint256)"(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    lastGrowTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lastGrowTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    moduleID(overrides?: CallOverrides): Promise<BigNumber>;

    "moduleID()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tokenJSON(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenJSON(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenSVG(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenSVG(uint256,uint256,uint256)"(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    zoneAssets(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "zoneAssets(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ACTOR_GUANGONG(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ACTOR_GUANGONG()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FABRIC_GROW_QUANTITY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FABRIC_GROW_QUANTITY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FOOD_GROW_QUANTITY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FOOD_GROW_QUANTITY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GOLD_GROW_QUANTITY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "GOLD_GROW_QUANTITY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GROW_QUANTITY_SCALE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "GROW_QUANTITY_SCALE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GROW_TIME_DAY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "GROW_TIME_DAY()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    HERB_GROW_QUANTITY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "HERB_GROW_QUANTITY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WOOD_GROW_QUANTITY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "WOOD_GROW_QUANTITY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collectAssets(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "collectAssets(uint256,uint256,uint256)"(
      _operator: BigNumberish,
      _actor: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    growAssets(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "growAssets(uint256,uint256)"(
      _operator: BigNumberish,
      _zoneId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initOperator(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "initOperator(uint256)"(
      _operator: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    lastGrowTimeStamps(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lastGrowTimeStamps(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    moduleID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "moduleID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tokenJSON(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenJSON(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenSVG(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenSVG(uint256,uint256,uint256)"(
      arg0: BigNumberish,
      _startY: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    zoneAssets(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "zoneAssets(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
