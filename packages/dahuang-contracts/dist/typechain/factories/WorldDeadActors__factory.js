"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorldDeadActors__factory = void 0;
const ethers_1 = require("ethers");
class WorldDeadActors__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_route, overrides) {
        return super.deploy(_route, overrides || {});
    }
    getDeployTransaction(_route, overrides) {
        return super.getDeployTransaction(_route, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.WorldDeadActors__factory = WorldDeadActors__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "contract WorldContractRoute",
                name: "_route",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_operator",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_actor",
                type: "uint256",
            },
        ],
        name: "addDead",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "deadActors",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "deadNum",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleID",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "tokenJSON",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "startY",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "tokenSVG",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "endY",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052600060015534801561001557600080fd5b5060405161086238038061086283398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b6107ca806100986000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632766c9c7146100675780633355390a1461009f5780637c3da21e146100b45780638e47eac9146100c55780638f7bb179146100f7578063dc41f75e1461012f575b600080fd5b61008a61007536600461066d565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad366004610686565b610138565b005b60db5b604051908152602001610096565b6100e96100d33660046106a8565b5060408051602081019091526000815292909150565b604051610096929190610734565b61012261010536600461066d565b506040805180820190915260028152617b7d60f01b602082015290565b6040516100969190610721565b6100b760015481565b6000546040516340d9124560e11b815260048082015283916001600160a01b0316906381b2248a9060240160206040518083038186803b15801561017b57600080fd5b505afa15801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b3919061062e565b6001600160a01b031663a329bda9826040518263ffffffff1660e01b81526004016101e091815260200190565b60206040518083038186803b1580156101f857600080fd5b505afa15801561020c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610230919061064b565b61026f5760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c792059654d696e6760a81b60448201526064015b60405180910390fd5b61027881610395565b6102bc5760405162461bcd60e51b81526020600482015260156024820152743737ba102cb2a6b4b73393b99037b832b930ba37b960591b6044820152606401610266565b600082116102ff5760405162461bcd60e51b815260206004820152601060248201526f1858dd1bdc881a59081a5b9d985b1a5960821b6044820152606401610266565b60008281526002602052604090205460ff161561035e5760405162461bcd60e51b815260206004820152601860248201527f616c72656164792061646465642064656164206163746f7200000000000000006044820152606401610266565b6000828152600260205260408120805460ff1916600190811790915580549091829161038b908390610756565b9091555050505050565b600080546040805163331fc30960e21b8152905183926001600160a01b03169163cc7f0c24916004808301926020929190829003018186803b1580156103da57600080fd5b505afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610412919061062e565b60405163020604bf60e21b81526004810185905290915033906001600160a01b0383169063081812fc9060240160206040518083038186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f919061062e565b6001600160a01b0316148061052457506040516331a9108f60e11b81526004810184905233906001600160a01b03831690636352211e9060240160206040518083038186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610519919061062e565b6001600160a01b0316145b8061062757506040516331a9108f60e11b8152600481018490526001600160a01b0382169063e985e9c5908290636352211e9060240160206040518083038186803b15801561057257600080fd5b505afa158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa919061062e565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260440160206040518083038186803b1580156105ef57600080fd5b505afa158015610603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610627919061064b565b9392505050565b60006020828403121561064057600080fd5b81516106278161077c565b60006020828403121561065d57600080fd5b8151801515811461062757600080fd5b60006020828403121561067f57600080fd5b5035919050565b6000806040838503121561069957600080fd5b50508035926020909101359150565b6000806000606084860312156106bd57600080fd5b505081359360208301359350604090920135919050565b6000815180845260005b818110156106fa576020818501810151868301820152016106de565b8181111561070c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061062760208301846106d4565b60408152600061074760408301856106d4565b90508260208301529392505050565b6000821982111561077757634e487b7160e01b600052601160045260246000fd5b500190565b6001600160a01b038116811461079157600080fd5b5056fea26469706673582212202ea4a7fe516803574de4a5a069ccf4e90daf0fc2e371bb202dbccccb3a1fef7964736f6c63430008060033";
